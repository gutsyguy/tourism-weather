name: CI

on:
  push:
    branches: [main, dev]
    paths:
      - "backend/**"
      - ".github/workflows/ci.yml"
  pull_request:
    branches: [main, dev]
    paths:
      - "backend/**"
      - ".github/workflows/ci.yml"
jobs:
  backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:password@localhost:5432/test_db

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.5
          bundler-cache: true

      - name: Install backend dependencies
        working-directory: backend
        run: bundle install --jobs 4 --retry 3

      - name: Set up backend database
        working-directory: backend
        run: |
          bin/rails db:create
          bin/rails db:schema:load

      - name: Run backend tests
        working-directory: backend
        run: bin/rails test

  frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install

      - name: Run frontend build
        working-directory: frontend
        run: npm run build

      - name: Run frontend tests
        working-directory: frontend
        run: npm test --if-present

  deploy-backend:
    needs: [backend] # run only if backend tests pass
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deployment
        run: curl "$RENDER_DEPLOY_HOOK_URL"
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_BACKEND_DEPLOY_HOOK }}
